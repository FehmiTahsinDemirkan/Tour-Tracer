<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>